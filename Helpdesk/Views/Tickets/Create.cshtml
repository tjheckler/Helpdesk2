@model Helpdesk.Models.Tickets

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm("Create", "Tickets", null, FormMethod.Post, new { enctype="multipart/form-data"}))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Tickets</h4>
        <hr />
        <div class="form-inline">

            <div class="col-md-offset-2 col-md-10">
                @Html.DropDownListFor(m => m.Site_Admins, (SelectList)ViewData["Site_Admins"], "Assign To", new { @class = "form-control", })

                @Html.DropDownListFor(m => m.Priorities, (SelectList)ViewData["Priorities"], "Select Priority", new { @class = "form-control", })

                @Html.DropDownListFor(m => m.Categories, (SelectList)ViewData["Categories"], "Select Category", new { @class = "form-control", })
                <h2 />
            </div>
            
        </div>      
      
        <div class="form-group">
            @Html.LabelFor(model => model.Date, "Today's Date", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, "Your Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name,  new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, "Email Address" , htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Telephone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Telephone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Telephone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Location, "Current Location", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.Location, (SelectList)ViewData["Location"], "Select Location", new { @class = "form-control", })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Region,"Current Region",  htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.Region, (SelectList)ViewData["Region"], "Select Region", new { @class = "form-control", })
            </div>
         </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ComputerName, "Computer Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ComputerName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ComputerName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AssetTag, "Asset Tag #", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AssetTag, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AssetTag, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Body, "Explain Issue", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
               @Html.TextAreaFor(model => model.Body, new { rows = "100", cols = "400", style = "width: 300px; height: 300px;", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
            </div>
        </div>

        
        @*  Code for File Drop Here   *@
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="file" name="file" multiple="multiple" />
            </div>
            <div class="col-md-offset-2 col-md-10">
                <input type="file" name="file" multiple="multiple" />
            </div>
            <div class="col-md-offset-2 col-md-10" >
                <input type="file" name="file" multiple="multiple" />
             </div>
         </div>
         <br/>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create Ticket Now" class="btn btn-default" />
                </div>
            </div>
       </div>
 
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    

@Scripts.Render("~/bundles/jqueryval")
}



